#include <mega128.h>
#include "lcd.h"
#include "Term.h"
#include <stdio.h>
#define Buzz  195
#define warning 300
#define Up_max 1
#define Down_max 2
#define Switch 3
#define Bright_check 4
#define Mode_Sel 5

unsigned char Erase[] = "                ";
int Mode_flag = 0;
int bright_count = 0;
short Bright_val;
int Count = 0;
int B_on = 0;
int Mo_count = 0;
int time_count=0;
int Mo_exit = 0;
char Time[] = {0,0,0,0,0,0};
int hr,min,sec;
int Mo_time_count = 0;
int reservation_mode = 0;
int wrong_flag = 0;
int index = 0;

short Get_ADC(int Number)//ADC1 사용 
{
    ADMUX = Number;
    ADMUX |= (1<<REFS0)|(1<<REFS1);
    ADCSRA |= (1<<ADEN)|(1<<ADSC)|(1<<ADFR)|(1<<ADPS2)|(1<<ADPS1);
    delay_ms(5);
    while(!(ADCSRA&(1<<ADIF)));
    return ADCW;
}

interrupt [TIM0_COMP] void timer0_out__comp(void)   //타이머 CTC 비교일치시 수행되는 함수 정의 
{
    bright_count++;                                                                                
    Count++;
    if(bright_count > 999)
    {
        if(B_on == 1)
        {
            Bright_val  = Get_ADC(Bright_check);
        }
        bright_count = 0;
    }    
}


interrupt [EXT_INT4] void ext_int4_isr(void)
{
    delay_ms(100);
    if(reservation_mode == 1)
    {
        reservation_mode = 0;
    }
    else if(Mode_flag !=0)
    {
        while(1)
        {
            if(PINE.4 == 1)
            {
                Mo_count = Mode_flag;
                Mode_flag = 0;           
                delay_ms(100);
                break;
            }
        }
    }
    else
    {
        Mo_exit = 1;    
    }       
}

void Auto_mode(void)
{
    int Treshold = 170;
    LCD_Pos(1,0);
    LCD_Str(Erase);
    B_on = 1;
    while(1)
    {
     //Auto_mode
        if(Bright_val < Treshold)
        {
            LCD_Pos(1,0);
            LCD_Str("Curtain Down");
            Treshold = 380;
        }
        else
        {
            LCD_Pos(1,0);
            LCD_Str("Curtain up  ");
            Treshold = 170;
        } 
        if(Mode_flag != 1) //Auto Mode 가 아닐시 함수탈출 
        {
            LCD_Clear();
            Treshold = 170; 
            break;
        }
     }   
}

void Manual_mode(void)
{
     int Switch_val = 0;
     LCD_Pos(1,0);
     LCD_Str(Erase);
     B_on = 0; //조도 꺼주는 옵션 
     while(1)
     {
        Switch_val =  Get_ADC(Switch);
        //Manual_mode
        if(Mode_flag != 2)
        {
            LCD_Clear();
            break;
        }
        if(Switch_val <300)
        {
            if(Get_ADC(Up_max) > 600){
                LCD_Pos(1,0);
                LCD_Str(Erase);
                LCD_Pos(1,0);
                LCD_Str("Curtain up ");
                Count = 0;                                            
                while(Count<125)
                {SSound(Buzz);}
                delay_ms(300);
            }       
            else
            {
                LCD_Pos(1,0);
                LCD_Str(Erase);
                LCD_Pos(1,5);
                LCD_Str("Up_Max");
                Count = 0;
                while(Count<125)
                {SSound(warning);}
                delay_ms(200);
            }
        }
        else if(Switch_val > 1000)
        {
            if(Get_ADC(Down_max) < 600){
                PORTB.4 = 0;
                PORTB.5 = 1;
                PORTB.6 = 1;
                LCD_Pos(1,0);
                LCD_Str(Erase);
                LCD_Pos(1,0);
                LCD_Str("Curtain Down");
                Count = 0;
                while(Count<125)
                {SSound(Buzz);}
                delay_ms(300);
                PORTB.6 = 0;
            }
            else
            {
                LCD_Pos(1,0);
                LCD_Str(Erase);
                LCD_Pos(1,5);
                LCD_Str("Down_Max");
                Count = 0;
                while(Count<125)
                {SSound(warning);}
                delay_ms(200);
            }
        }
        else
        {
            LCD_Pos(1,0);
            LCD_Str(Erase);
            LCD_Pos(1,0);
            LCD_Str("Curtain NoMov");
            delay_ms(100);
        }   
     }
}

void Timer_mode(void)
{
    int Switch_val = 0; 
    wrong_flag=0;
    LCD_Pos(1,0);
    LCD_Str(Erase);
    index = 0;
    puts_USART1("enter hour : ");
    while(1)
    {
        if(Mode_flag != 3)
        {
            LCD_Clear();
            wrong_flag = 1;
            break;
        }
        if(index > 5)
        {
            break;
        }
    }
    if(wrong_flag == 0)
    {
        hr = (Time[0]-48)*10 + (Time[1]-48);
        min = (Time[2]-48)*10 + (Time[3]-48);
        sec = (Time[4]-48)*10 + (Time[5]-48);
        LCD_Pos(0,1);
        LCD_Str(Erase);
        LCD_Pos(0,1);
        LCD_Char(Time[0]);
        LCD_Char(Time[1]);
        LCD_Char('h');
        LCD_Char(Time[2]);
        LCD_Char(Time[3]);
        LCD_Char('m');
        LCD_Char(Time[4]);
        LCD_Char(Time[5]);
        LCD_Char('s');
            
        LCD_Pos(1,0);
        LCD_Str("select updown");
        reservation_mode = 1;
        Mo_time_count = 3; //맵핑되지 않은 정수 대입 
        while(1)
        {
            Switch_val =  Get_ADC(Mode_Sel);
            if(Switch_val > 1000)
            {
                if(Mo_time_count == 0)
                {
                    Mo_time_count = 1;
                    LCD_Pos(1,0);
                    LCD_Str(Erase);
                    LCD_Pos(1,0);
                    LCD_Str("Up reservation");
                }
                else
                {
                    Mo_time_count = 0;
                    LCD_Pos(1,0);
                    LCD_Str(Erase);
                    LCD_Pos(1,0);
                    LCD_Str("Down reservation");
                }
                Count = 0;
                while(Count<125)
                {SSound(Buzz);}
                delay_ms(100);
                if(reservation_mode == 0)
                {
                    break;
                }      
            }
            if(reservation_mode == 0)
            {
                break;
            }    
        }
        while(1)
        {
            //모드가 선택되면 타이머실ㅇ행
            //아니면 비정상적 종료 
        }
    }    
    else
    {
        Mode_flag = 0;

    }
        
   
}

void Mode_select()
{
    int Switch_val = 0;
    LCD_Pos(1,0);
    LCD_Str(Erase);
    while(1)
    {
        Switch_val =  Get_ADC(Mode_Sel);
        if(Switch_val > 1000)
        {
            if(Mo_count >= 3)
            {
                Mo_count = 1;
            }
            else
            {
                Mo_count++;
            }
            Count = 0;
            while(Count<125)
            {SSound(Buzz);}
            delay_ms(100);      
        }
        else if(Switch_val < 100)
        {
            if(Mo_count <= 1)
            {
                Mo_count = 3;
            }
            else
            {
                Mo_count--;
            }
            Count = 0;
            while(Count<125)
            {SSound(Buzz);}
            delay_ms(100);
        }
        if(Mo_count == 0)
        {
            LCD_Pos(1,0);
            LCD_Str("Start Mode ");
        }
        else if(Mo_count == 1)
        {
            LCD_Pos(1,0);
            LCD_Str("Auto Mode  ");
        }
        else if(Mo_count == 2)
        {
            LCD_Pos(1,0);
            LCD_Str("Manual Mode");  
        }
        else if(Mo_count == 3)
        {
            LCD_Pos(1,0);
            LCD_Str("Timer Mode ");  
        }
        if(Mo_exit == 1)
        {
            Mode_flag = Mo_count;
            Mo_exit = 0;
            break;
        } 
    }    
}

interrupt [USART1_RXC] void usart1_receive(void)
{
    unsigned char str;
    str = UDR1; 
    if(str >= 0x30 && str <= 0x39)
    {                               
        if(index >5)
        {
            index = 6;   
        }
        else
        {
            Time[index] = str;
            if(index % 2 != 0)
            {
                putch_USART1(':');
            }
            index++;
        }    
    }
}

void main(void)
{   
    DDRG|=(1<<4);
    initAD();
    LCD_Init();
    PinE_4_init();
    PinD_0_init();
    Timer2_Init();
    Timer0_Init();
    Init_USART1();
    DDRB = 0xff;
    LCD_High_line(Mode_flag);
    while(1)
    {
        if(Mode_flag == 1)
        {
            LCD_High_line(Mode_flag);
            Auto_mode();
        }
        else if(Mode_flag == 2)
        {
            LCD_High_line(Mode_flag);
            Manual_mode();    
        }
        else if(Mode_flag == 3)
        {
            LCD_High_line(Mode_flag);
            Timer_mode();    
        }
        else if(Mode_flag ==0)
        {
            LCD_High_line(Mode_flag);
            Mode_select();
        }
    }
    
}
                